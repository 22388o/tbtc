version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@1.8.2
  gcp-gcr: circleci/gcp-gcr@0.0.4

executors:
  docker-node:
    docker:
      - image: circleci/node:11
  docker-git:
    docker:
      - image: docker:18.06.0-ce-git
  docker-thesis-buildpack:
    docker:
      - image: thesisco/docker-buildpack:bionic
jobs:
  setup_github_package_registry:
    executor: docker-node
    steps:
      - checkout
      - run:
          name: Authenticate GitHub Package Registry
          working_directory: ~/project/solidity
          command: echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> .npmrc
      - persist_to_workspace:
          root: .
          paths:
            - solidity/.npmrc

  compile_contracts:
    executor: docker-node
    steps:
      - checkout
      - attach_workspace:
          at: .

      - restore_cache:
          keys:
            # When lock file changes, use increasingly general patterns to restore cache.
            - v1-client-npm-deps-{{ .Branch }}-{{ checksum "solidity/package-lock.json" }}
            - v1-client-npm-deps-{{ .Branch }}-
            - v1-client-npm-deps-
      - run: cd solidity && npm install
      - save_cache:
          key: v1-client-npm-deps-{{ .Branch }}-{{ checksum "solidity/package-lock.json" }}
          paths:
            - solidity/node_modules

      - run: cd solidity && node_modules/.bin/truffle compile

      # Persist for downstream use.
      - persist_to_workspace:
          root: .
          paths:
           - solidity/node_modules
           - solidity/build/contracts

  lint:
    executor: docker-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint Implementation
          working_directory: ~/project/solidity
          command: |
            set -ex
            npm run lint
  unit_test_contracts:
    executor: docker-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: sudo npm install -g ganache-cli@6.4.2
      - run:
          name: Running testrpc
          working_directory: ~/project/solidity
          command: ganache-cli
          background: true
      - run:
          name: Run NPM tests
          working_directory: ~/project/solidity
          command: npm run test:quick
  generate_pngs:
    docker:
      - image: keepnetwork/texlive:15
    steps:
      - checkout
      - run:
          name: Generate TeX-based PNGs
          working_directory: ~/project/docs
          command: |
            mkdir -p /tmp/build/docs/img
            make pngs
            cp -r img/generated /tmp/build/docs/img/generated
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./build/docs/img/generated/*.png
  generate_docs_tex:
    docker:
      - image: keepnetwork/texlive:15
    steps:
      - checkout
      - run:
          name: Generate TeX Document Files
          working_directory: ~/project/docs
          command: |
            mkdir -p /tmp/build/docs
            make build.pdf
            cp *.pdf /tmp/build/docs
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./build/docs/*.pdf
  generate_docs_solidity:
    executor: docker-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Generate solidity docs
          command: |
            cd solidity/docs
            mkdir -p output
            node generate-api-docs.js > output/index.adoc

            mkdir -p /tmp/build/docs
            cp -r output /tmp/build/docs/solidity
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./build/docs/solidity/*
  generate_docs_asciidoctor:
    docker:
      - image: asciidoctor/docker-asciidoctor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Generate Asciidoctor PDF/HTML Files
          working_directory: ~/project/docs
          command: |
            set -ex
            shopt -s extglob globstar nullglob

            cp -r ../build/docs/img ./

            asciidoctor -a revdate=`date +%Y-%m-%d` --failure-level=ERROR *.adoc **/*.adoc
            for a in $(ls *.html **/*.html); do set +x; mkdir -p /tmp/build/docs/$(dirname $a); cp $a /tmp/build/docs/$(dirname $a)/; done
            set -x
            asciidoctor-pdf -a revdate=`date +%Y-%m-%d` *.adoc **/*.adoc
            for a in $(ls *.pdf **/*.pdf); do set +x; mkdir -p /tmp/build/docs/$(dirname $a); cp $a /tmp/build/docs/$(dirname $a)/; done
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./build/docs
  upload_docs:
    docker:
      - image: google/cloud-sdk:slim
    steps:
      - attach_workspace:
          at: /tmp
      - gcp-cli/initialize:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY_DOC_UPLOAD
      - run:
          name: Upload Document Files to docs.keep.network
          command: |
            cd /tmp/build/docs
            export DIR=$(test $CIRCLE_BRANCH != master && echo $CIRCLE_BRANCH/)
            gsutil -m cp -r * gs://docs.keep.network/tbtc/$DIR
  migrate_contracts:
    executor: docker-thesis-buildpack
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: .
      - run:
          name: Remove Installed node_module
          working_directory: ~/project/solidity
          command: |
            rm -rf node_modules
      - run:
          name: Provision External Contract Addresses
          command: |
            echo $GCLOUD_SERVICE_KEY > ~/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
            export UNISWAP_CONTRACT_DATA="uniswap-contract-data.txt"
            export BONDED_ECDSA_KEEP_VENDOR_CONTRACT_DATA="BondedECDSAKeepVendor.json"
            solidity/scripts/circleci-provision-external-contracts.sh
      - run:
          name: Migrate Contracts
          command: |
            echo $GCLOUD_SERVICE_KEY_JUMPHOST_SSH > ~/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
            export BUILD_TAG=$CIRCLE_SHA1
            export TRUFFLE_NETWORK=$TRUFFLE_NETWORK
            mkdir -p /tmp/tbtc/contracts
            solidity/scripts/circleci-migrate-contracts.sh
      - persist_to_workspace:
          root: /tmp/tbtc
          paths:
            - contracts
  publish_contract_data:
    executor: gcp-cli/default
    steps:
      - attach_workspace:
          at: /tmp/tbtc
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY
      - run:
          name: Upload contract data
          command: |
            cd /tmp/tbtc/contracts
            gsutil -m cp * gs://${CONTRACT_DATA_BUCKET}/tbtc

workflows:
  version: 2
  lint:
    jobs:
      - setup_github_package_registry:
          context: github-package-registry
      - compile_contracts:
          requires:
            - setup_github_package_registry
      - lint:
          requires:
            - compile_contracts
  test:
    jobs:
      - setup_github_package_registry:
          context: github-package-registry
      - compile_contracts:
          requires:
            - setup_github_package_registry
      - unit_test_contracts:
          requires:
            - compile_contracts
  docs:
    jobs:
      - setup_github_package_registry:
          context: github-package-registry
      - compile_contracts:
          requires:
            - setup_github_package_registry
      - generate_pngs
      - generate_docs_tex
      - generate_docs_solidity:
          requires:
            - compile_contracts
      - generate_docs_asciidoctor:
          requires:
            - generate_docs_solidity
            - generate_pngs
      - upload_docs:
          context: keep-docs
          requires:
            - generate_docs_tex
            - generate_docs_asciidoctor
  migrate_build_publish_keep_dev:
    jobs:
      - setup_github_package_registry:
          context: github-package-registry
      - compile_contracts:
          requires:
            - setup_github_package_registry
      - migrate_contracts:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - compile_contracts
      - publish_contract_data:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - migrate_contracts
  migrate_build_publish_keep_test:
    jobs:
      - keep_test_approval:
          type: approval
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - setup_github_package_registry:
          context: github-package-registry
          requires:
            - keep_test_approval
      - compile_contracts:
          requires:
            - setup_github_package_registry
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - migrate_contracts:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context: keep-test
          requires:
            - compile_contracts
      - publish_contract_data:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context: keep-test
          requires:
            - migrate_contracts
